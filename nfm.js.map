{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Const.ts","webpack:///./src/AsyncHelper.ts","webpack:///./src/dbhelper.ts","webpack:///./src/Equipment.ts","webpack:///./src/FCS.ts","webpack:///./src/Translation.ts","webpack:///./src/Aircraft.ts","webpack:///./src/Gun.ts","webpack:///./src/Launcher.ts","webpack:///./src/Flightdeck.ts","webpack:///./src/Engine.ts","webpack:///./src/Armor.ts","webpack:///./src/Oxygen.ts","webpack:///./src/Mount.ts","webpack:///./src/Crew.ts","webpack:///./src/ship.ts","webpack:///./src/nfm.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NATION","SHIPCLASS","SHIPGRADE","CREW_TYPE","COSTTYPE","DRIVEFLAG","LAUNCHER_SHELLTYPE","EQUIPMENT_TYPE","ARMOR_TYPE","AIRCRAFT_TYPE","MAX_EQUIPMENT_LEVEL","time2sec","toFixed","speed2kn","AsyncHelper","[object Object]","Promise","resolve","reject","setTimeout","path","loadedData","$","data","this","wait","dbhelper_DbHelper","m_db","SQL","window","xhr","XMLHttpRequest","open","responseType","onload","e","loaded_data","Uint8Array","response","Database","send","dbname","filter","sql_str","condition_str","push","join","console","log","sql_rs","exec","rs","length","values","row","json_row","col_idx","columns","type","GUN","AUTO_GUN","FCS","ENGINE","LAUNCHER","ARMOR","HULL","AIRCRAFT","FLIGHTDECK","OXYGEN","eqtypemap","types","typev","RESTORE","Equitment","id","buildingtime","steel","gold","equiomentrow","sub_key","cost_str","toString","Equipment_EquipmentClass","count","levels","mainkey","keyidx","error","type_idx","findIndex","FCS_FCS","nation","acc","torpedodist","sightdist","radarrange","sonarrange","criticalrate","base_attr","super","export","concat","Translation_Translation","lang","m_trans","Map","lang_file_path","content","GetAsync","lines","replace","split","line","kv","undefined","Trim","substr","set","size","def_str","has","str","plain_type_map","v","SCOUT","FIGHTER","TORPEDO","BOMBER","Aircraft_Plain","sightrange","DP","speed","fuel","attack","attackgap","defenceap","readytime","torpedospeed","torpedodamage","hedamage","apdamagebouns","that","type_str","find","loc_str","Aircraft_AirCraft","plainMap","obj_attr","plain","Gun_Gun","gunrow","barrelnum","maxanglev","reloadtime","turnspeed","calibre","aaw","aadamage","range","klass","Launcher_Launcher","bundle","anglenarrow","anglewide","shelltype","speedlo","speedhi","hittype","minrange","speedlorange","speedhirange","speed_str","Flightdeck_FlightDeck","scout","fighter","torpedo","bomber","squadron","Engine_Engine","maxspeed","overspeed","overtime","armor_type_map","BELT","DECK","BULGE","Armor_Armor","bulge","hull","speedpercent","belt_armor","deck_armor","Oxygen_Oxygen","divetime","MountPoint","abiliti_rate","type_map","OPERATOR","ARMAMENT","REPAIR","SEAMAN","RADIO","AVIATION","Crew_Crew","health","turn","accurancy","gunreload","torpedoreload","overheadspeed","overheadtime","repair","reducedamage","airlaunchtime","airspeed","airfuel","airsightrange","upgrade_xp","upgrade_time","upgrade_cost_fuel","master_cost_credit","master_cost_fuel","master_cost_steel","level","type_s","master_credit","master_steel","master_fuel","abrate","Math","floor","ship_Ship","DebugName","shipname","shiprow","shipclass","shipgrade","dp","turncap","size_l","size_w","size_h","cost","costType","buildtime","xpbonus","aadef","aarange","mountnum","equipments","eq_type","eq_class","Number","mounts","mount","defautEquipmentId","driveflag","controlflag","mountflag","wp_count_dic","dup_idx","w","num","DD","CL","CA","BB","query","Serial_SNDB","gun","init","getEquipmentTypeById","launcher","CV","SS","eq_class_gun","eq_class_autogun","eq_class_launcher","fcs_id_def","eq_class_fcs","eq","engine_id_def","eq_class_engine","flightdeck_id_def","eq_class_flightdeck","oxygen_id_def","eq_class_oxygen","eq_class_armor","air_types","air_type","air_id","eq_class_aircraft","ac","equipment_rs","equipment_row","db_keys","db_key","eq_types","eq_typev","getEquipmentTypeByStr","subkey","eq_id","obj","loadEquipmentInfo","eq_real_type","crews","quert_class","CLASS","crewrow","crew","scouts","eq_flightdeck","def_engine","def_fcs","DPS","GunTurretNum","GunBarrelNum","GunDamage","GunReloadTime","eq_gun","GunRange","LauncherNum","eq_launcher","titles","text","weapon_list","weapon","items","width","exportAsLauncher","engine","fcs","fd","exportAircraftPlains","ar","ox","AsyncStart","nfm_Main","Start","m_jq_win_loading","m_inited","m_jq_cb_dbver","combobox","editable","m_jq_cb_nation","valueField","textField","onSelect","rec","m_nation","refreshL1","ALL","m_jq_cb_shipclass","m_shipclass","m_jq_cb_shipgrade","m_shipgrade","m_jq_cb_shipname","idx","m_last_shiplist","m_selected_ship","refreshL2","m_jq_base_div","m_jq_img_shipimage","m_jq_tab_base_table","m_jq_tab_extra_table","m_jq_tab_gun_table","m_jq_tab_autogun_table","m_jq_tab_launcher_table","m_jq_tab_aircraft_table","m_jq_tab_fcs_table","m_jq_tab_engine_table","m_jq_tab_flightdeck_table","m_jq_tab_armor_table","m_jq_tab_oxygen_table","m_jq_tab_crew_table","param","Nation","Class","Grade","row_ship","in_shop","full_name","getShipFullName","S","A","B","C","D","E","F","ship_name","FrameName","getShipClassStr","getShipGradeStr","src","asset_ships","ship_img_url","UIFolder","attr","ship","makeTable","exportBaseData","exportExtraData","makeLevelTable","exportGunsData","exportLaunchersData","exportEnginesData","exportFlightDecksData","exportAircraftData","exportFCSsData","exportArmorData","exportOxygensData","exportCrewsData","jq_table","children","remove","jq_str","append","param_list","Array","title","j","item","keywords","ls_names","ls"],"mappings":"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","file":"nfm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum NATION{\r\n    ALL = -1,\r\n    US = 1,\r\n    UN = 2,\r\n    IJ = 3,\r\n    KM = 4,\r\n    SN = 5,\r\n    FR = 6,\r\n    IT = 7,\r\n}\r\n\r\nexport enum SHIPCLASS{\r\n    DD = 0,\r\n    CL = 1,\r\n    CA = 2,\r\n    BB = 3,\r\n    CV = 4,\r\n    SS = 5,\r\n    ALL = -1,\r\n}\r\n\r\nexport enum SHIPGRADE{\r\n    F = 0,\r\n    E = 1,\r\n    D = 2,\r\n    C = 3,\r\n    B = 4,\r\n    A = 5,\r\n    S = 6,\r\n    ALL = -1,\r\n}\r\n\r\nexport enum CREW_TYPE{\r\n    OPERATOR=0,\r\n    ARMAMENT=1,\r\n    ENGINE=2,\r\n    REPAIR=3,\r\n    RADIO=4,\r\n    SEAMAN=5,\r\n    AVIATION=6,\r\n}\r\n\r\nexport enum COSTTYPE{\r\n    STEEL,\r\n    GOLD,\r\n}\r\n\r\nexport enum DRIVEFLAG{\r\n    GUN = 0,\r\n    LAUCHER = 1,\r\n}\r\n\r\nexport enum LAUNCHER_SHELLTYPE{\r\n    TORPEDO = 0,\r\n    MINE = 1,\r\n}\r\n\r\nexport enum EQUIPMENT_TYPE{\r\n    FCS,\r\n    AUTO_GUN,\r\n    LAUNCHER,\r\n    ARMOR,\r\n    HULL,\r\n    AIRCRAFT,\r\n    FLIGHTDECK,\r\n    OXYGEN,\r\n    ENGINE,\r\n    GUN,\r\n    RESTORE,\r\n}\r\n\r\nexport enum ARMOR_TYPE{\r\n    BELT = 1,\r\n    DECK = 2,\r\n    BULGE = 3,\r\n    HULL = 4,\r\n}\r\n\r\nexport enum AIRCRAFT_TYPE{\r\n    SCOUT=1,\r\n    FIGHTER=2,\r\n    TORPEDO=3,\r\n    BOMBER=4,\r\n}\r\n\r\nexport let MAX_EQUIPMENT_LEVEL = 3;\r\n\r\nexport function time2sec(n:number){\r\n    return `${(n/100).toFixed(2)} Sec`;\r\n}\r\nexport function speed2kn(n:number){\r\n    return `${n} kn`;\r\n}\r\n","export class AsyncHelper{\r\n    public static wait(): Promise<void>{\r\n        return new Promise<void>((resolve, reject)=>{setTimeout(()=>resolve(), 10)});\r\n    }\r\n    \r\n    public static async GetAsync(path:string): Promise<any>{\r\n        let loadedData = null;\r\n        $.get(path, function(data) {\r\n            loadedData = data;\r\n        });\r\n        while(loadedData == null){\r\n            await this.wait();\r\n        }\r\n        return loadedData;\r\n    }\r\n}\r\n","import { EQUIPMENT_TYPE } from \"./Const\";\r\nimport { AsyncHelper } from \"./AsyncHelper\";\r\n\r\nexport class DbHelper{\r\n    private static m_db:any;\r\n    public static async init(){\r\n        this.m_db = null;\r\n        let win = window as any;\r\n        let SQL = win.SQL;\r\n        let url_to_db = \"./db/nfm_dbase.sql3\";\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url_to_db, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onload = function(e) {\r\n            var loaded_data = new Uint8Array(this.response);\r\n            DbHelper.m_db = new SQL.Database(loaded_data);\r\n            // let rs = sql.exec('select * from SHIP');\r\n            //console.log(\"\");\r\n        };\r\n        xhr.send();\r\n\r\n        while (this.m_db == null){\r\n            await AsyncHelper.wait();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public static query(dbname:string, filter:any){\r\n        let sql_str = `select * from ${dbname}`;\r\n        if (filter){\r\n            sql_str += ` where `;\r\n            let condition_str = [];\r\n            for (let key in filter){\r\n                condition_str.push(`${key}=${filter[key]}`);\r\n            }\r\n            sql_str+= condition_str.join(' and ');\r\n        }\r\n        console.log(sql_str);\r\n        let sql_rs = this.m_db.exec(sql_str);\r\n        let rs:any[] = [];\r\n        if (sql_rs.length == 0){\r\n            return rs;\r\n        }\r\n        for (let i=0;i<sql_rs[0].values.length;i++){\r\n            let row = sql_rs[0].values[i];\r\n            let json_row = Object();\r\n            // make a json style row\r\n            for (let col_idx =0 ;col_idx< sql_rs[0].columns.length; col_idx++){\r\n                let col = sql_rs[0].columns[col_idx];\r\n                json_row[col] = row[col_idx];\r\n                //console.log(`write key${col.name}=>${row[col_idx]}`);\r\n            }\r\n            rs.push(json_row);\r\n        }\r\n        return rs;\r\n    }\r\n    \r\n    public EquipmentType2Enum(type:string){\r\n        switch (type){\r\n            case 'Gun':return EQUIPMENT_TYPE.GUN;\r\n            case 'AutoGun':return EQUIPMENT_TYPE.AUTO_GUN;\r\n            case 'FCS':return EQUIPMENT_TYPE.FCS;\r\n            case 'Engine':return EQUIPMENT_TYPE.ENGINE;\r\n            case 'Launcher':return EQUIPMENT_TYPE.LAUNCHER;\r\n            case 'Armor':return EQUIPMENT_TYPE.ARMOR;\r\n            case 'Hull':return EQUIPMENT_TYPE.HULL;\r\n            case 'Aircraft':return EQUIPMENT_TYPE.AIRCRAFT;\r\n            case 'FlightDeck':return EQUIPMENT_TYPE.FLIGHTDECK;\r\n            case 'Oxygen':return EQUIPMENT_TYPE.OXYGEN;\r\n            default:return -1;\r\n        }\r\n    }\r\n}","import { EQUIPMENT_TYPE, MAX_EQUIPMENT_LEVEL } from \"./Const\";\r\n\r\nlet eqtypemap = [\r\n    {types:\"FCS\", typev: EQUIPMENT_TYPE.FCS},\r\n    {types:\"AutoGun\", typev: EQUIPMENT_TYPE.AUTO_GUN},\r\n    {types:\"Launcher\", typev: EQUIPMENT_TYPE.LAUNCHER},\r\n    {types:\"Armor\", typev: EQUIPMENT_TYPE.ARMOR},\r\n    {types:\"Hull\", typev: EQUIPMENT_TYPE.HULL},\r\n    {types:\"Aircraft\", typev: EQUIPMENT_TYPE.AIRCRAFT},\r\n    {types:\"FlightDeck\", typev: EQUIPMENT_TYPE.FLIGHTDECK},\r\n    {types:\"Oxygen\", typev: EQUIPMENT_TYPE.OXYGEN},\r\n    {types:\"Engine\", typev: EQUIPMENT_TYPE.ENGINE},\r\n    {types:\"Gun\", typev: EQUIPMENT_TYPE.GUN},\r\n    {types:\"Restore\", typev: EQUIPMENT_TYPE.RESTORE},\r\n];\r\n\r\nexport class Equitment{\r\n    public id:number;\r\n    public buildingtime:number;\r\n    public steel:number;\r\n    public gold:number;\r\n\r\n    public klass:EquipmentClass;\r\n\r\n    public constructor(){\r\n        this.id = 0;\r\n        this.buildingtime = 0;\r\n        this.steel = 0;\r\n        this.gold = 0;\r\n    }\r\n    public loadEquipmentInfo(equiomentrow:any, sub_key:string){\r\n        this.buildingtime = equiomentrow[`${sub_key}_BuildTime`];\r\n        this.steel = equiomentrow[`${sub_key}_Steel`];\r\n        this.gold = equiomentrow[`${sub_key}_Gold`];\r\n    }\r\n\r\n    public export(){\r\n        let cost_str = '';\r\n        if (this.gold > 0){\r\n            cost_str = `${this.gold}`;\r\n        }else if (this.steel > 0){\r\n            cost_str = `${this.steel}`;\r\n        }else{\r\n            cost_str = 'default';\r\n        }\r\n        \r\n        return [\r\n            this.buildingtime.toString(),\r\n            cost_str,\r\n        ];\r\n    }\r\n}\r\n\r\nexport class EquipmentClass{\r\n    public type:EQUIPMENT_TYPE;\r\n    public count:number;\r\n    public levels:Equitment[];\r\n\r\n    public constructor(){\r\n        this.count = 0;\r\n        this.levels = [];\r\n    }\r\n\r\n    public static isValid(row:any, mainkey:string, keyidx:number){\r\n        let key = `${mainkey}${keyidx}`;\r\n        // HACK\r\n        let type = 0;\r\n        if (mainkey == 'A' && keyidx == 1){\r\n            type = row[`${key}_TYPE`];\r\n        }else{\r\n            type = row[`${key}1_TYPE`];\r\n        }\r\n        return type != 0;\r\n    }\r\n\r\n    public static getEquipmentTypeById(id:number){\r\n        if (id >= 4000 && id < 5000){\r\n            return EQUIPMENT_TYPE.AUTO_GUN;\r\n        }else if (id >= 5000 && id < 6000){\r\n            return EQUIPMENT_TYPE.LAUNCHER;\r\n        }\r\n        console.error(`err id=${id}`);\r\n        return -1;\r\n    }\r\n\r\n    public static getEquipmentTypeByStr(s:string){\r\n        let type_idx = eqtypemap.findIndex((e)=>{\r\n            return e.types == s;\r\n        });\r\n\r\n        return eqtypemap[type_idx].typev;\r\n    }\r\n\r\n    // public loadUpgradeInfo(db:any, row:any, mainkey:string){\r\n    //     this.count = 0;\r\n    //     let types = row[`${mainkey}_TYPE`] as string;\r\n    //     this.type = EquipmentClass.getEquipmentTypeByStr(types);\r\n        \r\n    //     //this.type = typemap[type];///////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    //     //this.levels = [];\r\n\r\n    //     for (let i=1;i<MAX_EQUIPMENT_LEVEL+1;i++){\r\n    //         let sub_key = `${mainkey}${i}`;\r\n    //         let eq = new Equitment();\r\n\r\n    //         eq.id = row[`${sub_key}_SNDB`];\r\n    //         eq.buildingtime = row[`${sub_key}_BuildTime`];\r\n    //         eq.steel = row[`${sub_key}_Steel`];\r\n    //         eq.gold = row[`${sub_key}_Gold`];\r\n\r\n    //         this.levels.push(eq);\r\n    //     }\r\n    // }\r\n}","import { NATION } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\n\r\nexport class FCS extends Equitment{\r\n    public name:string;\r\n    public nation:NATION;\r\n    public acc:number;\r\n    public torpedodist:number;\r\n    public sightdist:number;\r\n    public radarrange:number;\r\n    public sonarrange:number;\r\n    public criticalrate:number;\r\n\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.name = row['FCSName'];\r\n        this.nation = row['NationCode'];\r\n        this.acc = row['AccuracyBonus'];\r\n        this.torpedodist = row['TorpedoDistance'];\r\n        this.sightdist = row['ViewDistance'];\r\n        this.radarrange = row['RadarRange'];\r\n        this.sonarrange = row['SonarRange'];\r\n        this.criticalrate = row['CriticalBonus'];\r\n    }\r\n\r\n    public export(){\r\n        let base_attr = super.export();\r\n        let obj_attr = [\r\n            this.name,\r\n            \"+\"+this.acc,\r\n            this.sightdist.toString(),\r\n            this.radarrange.toString(),\r\n            this.sonarrange.toString(),\r\n            this.torpedodist.toString(),\r\n            `+${this.criticalrate}%`,\r\n        ];\r\n\r\n        return obj_attr.concat(base_attr);\r\n    }\r\n}","import { AsyncHelper } from \"./AsyncHelper\";\r\n\r\nexport class Translation{\r\n    private static m_trans:Map<string,string>;\r\n\r\n    public static async init(lang:string){\r\n        this.m_trans = new Map<string,string>();\r\n        let lang_file_path = `./asset/localizable/${lang}/Localizable.strings`;\r\n        let content = await AsyncHelper.GetAsync(lang_file_path);\r\n        content = content.replace('\\n','');\r\n        let lines = content.split(';');\r\n\r\n        for (let line of lines){\r\n            if (line == ''){\r\n                continue;\r\n            }\r\n            \r\n            let kv = line.split('=');\r\n            if (kv[0]=='' || kv[1] == undefined){\r\n                continue;\r\n            }\r\n            \r\n            kv[0] = this.Trim(kv[0]);\r\n            kv[1] = this.Trim(kv[1]);\r\n            kv[0] = kv[0].substr(1,kv[0].length-2);\r\n            kv[1] = kv[1].substr(1,kv[1].length-2);\r\n            //console.log(`k=${kv[0]}v=${kv[1]}`);\r\n\r\n            this.m_trans.set(kv[0], kv[1]);\r\n        }\r\n        console.log(this.m_trans.size+\" loaded\");\r\n    }\r\n\r\n    public static str(s:string, def_str:string){\r\n        if (this.m_trans.has(s)){\r\n            return this.m_trans.get(s);\r\n        }\r\n        return def_str;\r\n    }\r\n    public static Trim(str:string){ \r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\"); \r\n    }\r\n}","import { AIRCRAFT_TYPE } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\nimport { Translation } from \"./Translation\";\r\n\r\nlet plain_type_map = [\r\n    {v:AIRCRAFT_TYPE.SCOUT,s:\"LS_SCOUTS\"},\r\n    {v:AIRCRAFT_TYPE.FIGHTER,s:\"LS_FIGHTERS\"},\r\n    {v:AIRCRAFT_TYPE.TORPEDO,s:\"LS_TORPEDO_BOMBERS\"},\r\n    {v:AIRCRAFT_TYPE.BOMBER,s:\"LS_DIVE_BOMBERS\"},\r\n]\r\n\r\nexport class Plain{\r\n    public id:number;\r\n    public name:string;\r\n    public type:AIRCRAFT_TYPE;\r\n    public sightrange:number;\r\n    public DP:number;\r\n    public speed:number;\r\n    public fuel:number;\r\n    public attack:number;\r\n    public attackgap:number;\r\n    public defenceap:number;\r\n    public readytime:number;\r\n    public torpedospeed:number;\r\n    public torpedodamage:number;\r\n    public hedamage:number;\r\n    public apdamagebouns:number;\r\n\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.name = row['AircraftName'];\r\n        this.type = row['AirCraftType'];\r\n        this.sightrange = row['SightRange'];\r\n        this.DP = row['DP'];\r\n        this.speed = row['Speed'];\r\n        this.fuel = row['Fuel'];\r\n        this.attack = row['Attack'];\r\n        this.attackgap = row['AttackGap'];\r\n        this.defenceap = row['DefenceAP'];\r\n        this.readytime = row['ReadyTime'];\r\n        this.torpedospeed = row['SpeedHi'];\r\n        this.torpedodamage = row['TorpedoHEDamage'];\r\n        this.hedamage = row['HEDamage'];\r\n        this.apdamagebouns = row['APDamageBonus'];\r\n    }\r\n\r\n    public export(){\r\n        let that = this;\r\n        let type_str = plain_type_map.find((p)=>{\r\n            return p.v == that.type;\r\n        }).s;\r\n        let loc_str = Translation.str(type_str, type_str);\r\n\r\n        let obj_attr = [\r\n            this.name,\r\n            loc_str,\r\n            this.sightrange,\r\n            this.DP,\r\n            this.speed,\r\n            this.fuel,\r\n            this.attack,\r\n            this.attackgap,\r\n            this.defenceap,\r\n            this.readytime,\r\n            this.torpedospeed,\r\n            this.torpedodamage,\r\n            this.hedamage,\r\n            this.apdamagebouns,\r\n\r\n        ];\r\n\r\n        return obj_attr;\r\n    }\r\n}\r\n\r\nexport class AirCraft extends Equitment{\r\n    public plainMap:Map<AIRCRAFT_TYPE,Plain>;\r\n    public constructor(){\r\n        super();\r\n        this.plainMap = new Map<AIRCRAFT_TYPE, Plain>();\r\n    }\r\n\r\n    public exportAircraftPlains(){\r\n        let base_attr = super.export();\r\n        let obj_attr = [];\r\n        for (let plain of this.plainMap.values()){\r\n            obj_attr.push(plain.export().concat(base_attr));\r\n        }\r\n\r\n        return obj_attr;\r\n    }\r\n}","import { NATION, time2sec } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\n\r\nexport class Gun extends Equitment{\r\n    public name:string;\r\n    public nation:NATION;\r\n    public barrelnum:number;\r\n    public maxanglev:number;\r\n    public reloadtime:number;\r\n    public turnspeed:number;\r\n    public hedamage:number;\r\n    public calibre:number;\r\n    public aaw:number;\r\n    public aadamage:number;\r\n    public range:number;\r\n\r\n    public init(gunrow:any){\r\n        this.id = gunrow['Serial_SNDB'];\r\n        this.name = gunrow['GunSetName'];\r\n        this.nation = gunrow['NationCode'];\r\n        this.barrelnum = gunrow['TurretType'];\r\n        this.maxanglev = gunrow['AngleMaxVertical'];\r\n        this.reloadtime = gunrow['ReloadTime'];\r\n        this.turnspeed = gunrow['TaskSpeed'];\r\n        this.hedamage = gunrow['HEDamage'];\r\n        this.calibre = gunrow['Calibre'];\r\n        this.aaw = gunrow['AAW'];\r\n        this.aadamage = gunrow['AADamage'];\r\n        this.range = gunrow['GameMaxDist'];\r\n    }\r\n    public export(){\r\n\r\n\r\n        let base_attr = super.export();\r\n        let attr = [\r\n            this.name,\r\n            'x'+this.klass.count,\r\n            \"x\"+this.barrelnum,\r\n            (this.calibre/100).toFixed(2) + '\"',\r\n            this.hedamage.toString(),\r\n            this.range.toString(),\r\n            time2sec(this.reloadtime),\r\n            `${this.turnspeed} Deg/Sec`,\r\n            this.aadamage.toString(),\r\n            this.aaw==1?\"yes\":\"\"\r\n        ];\r\n        return attr.concat(base_attr);\r\n    }\r\n    public exportAsLauncher(){\r\n        let base_attr = super.export();\r\n        let attr = [\r\n            this.name,\r\n            'x'+this.klass.count,\r\n            \"x\"+this.barrelnum,\r\n            this.hedamage,\r\n            this.range,\r\n            time2sec(this.reloadtime),\r\n            '',\r\n        ];\r\n        return attr.concat(base_attr);\r\n    }\r\n}","import { NATION, LAUNCHER_SHELLTYPE, time2sec } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\n\r\nexport class Launcher extends Equitment{\r\n    public name:string;\r\n    public nation:NATION;\r\n    public bundle:number;\r\n    public turnspeed:number;\r\n    public anglenarrow:number;\r\n    public anglewide:number;\r\n    public reloadtime:number;\r\n    public shelltype:LAUNCHER_SHELLTYPE;\r\n    public speedlo:number;\r\n    public speedhi:number;\r\n    public hittype:number;//引爆类型0=鱼雷，1=刺猬/水雷\r\n    public minrange:number;//?\r\n    public speedlorange:number;\r\n    public speedhirange:number;\r\n    public hedamage:number;\r\n\r\n\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.name = row['TpLauncherName'];\r\n        this.nation = row['NationCode'];\r\n        this.bundle = row['Bundle'];\r\n        this.turnspeed = row['Task_Speed'];\r\n        this.anglenarrow = row['FireAngleNarrow'];\r\n        this.anglewide = row['FireAngleWide'];\r\n        this.reloadtime = row['ReloadTime'];\r\n        this.shelltype = row['ShellType'];\r\n        this.speedlo = row['SpeedLo'];\r\n        this.speedhi = row['SpeedHi'];\r\n        this.hittype = row[\"HitType\"];\r\n        this.minrange = row['MinRange'];\r\n        this.speedlorange = row['Crusing_Range_SpeedLo'];\r\n        this.speedhirange = row['Crusing_Range_SpeedHi'];\r\n        this.hedamage = row['HEDamage'];\r\n\r\n    }\r\n\r\n    public export(){\r\n        let base_attr = super.export();\r\n\r\n        let speed_str = '';\r\n        if (this.shelltype == LAUNCHER_SHELLTYPE.TORPEDO){\r\n            speed_str = this.speedlo + ' Kn';\r\n        }else{\r\n            speed_str = \"\";\r\n        }\r\n\r\n        let obj_attr = [\r\n            this.name,\r\n            'x'+this.klass.count,\r\n            'x'+this.bundle.toString(),\r\n            this.hedamage.toString(),\r\n            this.speedlorange.toString(),\r\n            `${time2sec(this.reloadtime)}`,\r\n            speed_str\r\n        ];        \r\n        return obj_attr.concat(base_attr);\r\n    }\r\n}","import { NATION } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\n\r\nexport class FlightDeck extends Equitment{\r\n    public nation:NATION;\r\n    public scout:number;\r\n    public fighter:number;\r\n    public torpedo:number;\r\n    public bomber:number;\r\n    public squadron:number;\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.nation = row['NationCode'];\r\n        this.scout = row['Scout'];\r\n        this.fighter = row['Fighter'];\r\n        this.torpedo = row['Torpedo'];\r\n       \r\n        this.bomber = row['Dive'];\r\n        this.squadron = row['Squadron'];\r\n    }\r\n\r\n    public export(){\r\n        let base_attr = super.export();\r\n        let obj_attr = [\r\n            this.scout+'',\r\n            this.fighter.toString(),\r\n            this.torpedo.toString(),\r\n            this.bomber.toString(),\r\n            this.squadron.toString(),\r\n        ];\r\n        return obj_attr.concat(base_attr);\r\n    }\r\n}","import { NATION, time2sec, speed2kn } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\n\r\nexport class Engine extends Equitment{\r\n    public name:string;\r\n    public nation:NATION;\r\n    public maxspeed:number;\r\n    public overspeed:number;\r\n    public overtime:number;\r\n\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.name = row['EngineName'];\r\n        this.nation = row['NationCOde'];\r\n        this.maxspeed = row['ShipMaxSpeed'];\r\n        this.overspeed = row['ShipOverSpeed'];\r\n        this.overtime = row['ShipOverSpeedTime'];\r\n    }\r\n\r\n    public export(){\r\n        let base_attr = super.export();\r\n        let obj_attr = [\r\n            this.name,\r\n            `${speed2kn(this.maxspeed)}`,\r\n            `${speed2kn(this.overspeed)}`,\r\n            `${this.overtime} Sec`,\r\n        ];\r\n        return obj_attr.concat(base_attr);\r\n    }\r\n}","import { ARMOR_TYPE } from \"./Const\";\r\nimport { Equitment } from \"./Equipment\";\r\nimport { Translation } from \"./Translation\";\r\n\r\nlet armor_type_map = [\r\n    {v:ARMOR_TYPE.BELT,s:\"LS_PARAM_BELT\"},\r\n    {v:ARMOR_TYPE.DECK,s:\"LS_PARAM_DECK\"},\r\n    {v:ARMOR_TYPE.BULGE,s:\"LS_PARAM_BULGE\"},\r\n    {v:ARMOR_TYPE.HULL,s:\"LS_PARAM_HULL\"},\r\n    {v:0,s:\"None\"},\r\n]\r\n\r\nexport class Armor extends Equitment{\r\n    public type:ARMOR_TYPE;\r\n    public name:string;\r\n\r\n    public bulge:number;\r\n    public hull:number;\r\n    public speedpercent:number;\r\n    public belt_armor:number[];\r\n    public deck_armor:number[];\r\n\r\n    public constructor(){\r\n        super();\r\n        this.name = 'None';\r\n        this.type = 0;\r\n        this.bulge = 0;\r\n        this.hull = 0;\r\n        this.speedpercent = 100;\r\n        this.belt_armor = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n        this.deck_armor = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n    }\r\n\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.type = row['Type'];\r\n        this.name = this.type.toString();\r\n        this.bulge = row['Bulge'];\r\n        this.hull = row['Hull'];\r\n        this.speedpercent = row['SpeedPercent'];\r\n\r\n        for (let i=0;i<16;i++){\r\n            this.belt_armor[i] = row[`b${i+5}`];\r\n            this.deck_armor[i] = row[`d${i+5}`];\r\n        }\r\n    }\r\n\r\n    public export(){\r\n        let that = this;\r\n        let type_str = armor_type_map.find((p)=>{\r\n            return p.v == that.type;\r\n        }).s;\r\n        let loc_str = Translation.str(type_str, type_str);\r\n\r\n\r\n        let base_attr = super.export();\r\n        let obj_attr = [\r\n            loc_str,\r\n            this.bulge + \"%\",\r\n            this.hull+'',\r\n            (this.speedpercent-100) + '%',\r\n        ];\r\n\r\n        for (let i=0;i<this.belt_armor.length;i++){\r\n            obj_attr.push(this.belt_armor[i].toString());\r\n        }\r\n        for (let i=0;i<this.deck_armor.length;i++){\r\n            obj_attr.push(this.deck_armor[i].toString());\r\n        }\r\n\r\n        return obj_attr.concat(base_attr);\r\n    }\r\n\r\n}","import { Equitment } from \"./Equipment\";\r\n\r\nexport class Oxygen extends Equitment{\r\n    public divetime:number;\r\n    public init(row:any){\r\n        this.id = row['Serial_SNDB'];\r\n        this.divetime = row['DiveTime'];\r\n    }\r\n\r\n    public export(){\r\n        let base_attr = super.export();\r\n        let obj_attr = [\r\n            this.divetime.toString(),\r\n        ]\r\n        return obj_attr.concat(base_attr);\r\n    }\r\n}","import { Equitment } from \"./Equipment\";\r\n\r\nexport class MountPoint{\r\n    public id:number;\r\n    public defautEquipmentId:number;\r\n    public defaultEquitment:Equitment;\r\n    public driveflag:number;\r\n    public mountflag:number;\r\n    public controlflag:number;\r\n\r\n    public constructor(id:number){\r\n        this.id = id;\r\n    }\r\n}","import { SHIPGRADE, SHIPCLASS, CREW_TYPE } from \"./Const\";\r\nimport { Translation } from \"./Translation\";\r\n\r\nlet abiliti_rate = [\r\n    0.5,\r\n    1,\r\n    1.5,\r\n    2,\r\n    2.5\r\n];\r\n\r\nlet type_map = [\r\n    {v:CREW_TYPE.OPERATOR, s:'LS_SAILOR_OPERATOR'},\r\n    {v:CREW_TYPE.ARMAMENT, s:'LS_SAILOR_ARMAMENT'},\r\n    {v:CREW_TYPE.ENGINE, s:'LS_SAILOR_ENGINE'},\r\n    {v:CREW_TYPE.REPAIR, s:'LS_SAILOR_REPAIR'},\r\n    {v:CREW_TYPE.SEAMAN, s:'LS_SAILOR_SEAMAN'},\r\n    {v:CREW_TYPE.RADIO, s:'LS_SAILOR_RADIO'},\r\n    {v:CREW_TYPE.AVIATION, s:'LS_SAILOR_AVIATION'},\r\n]\r\n\r\nexport class Crew{\r\n    public klass:SHIPCLASS;\r\n    public type:CREW_TYPE;\r\n\r\n    public health:number;\r\n    public aaw:number;\r\n    public turn:number;\r\n    public divetime:number;\r\n    public accurancy:number;\r\n    public sightrange:number;\r\n    public gunreload:number;\r\n    public torpedoreload:number;\r\n    public maxspeed:number;\r\n    public overheadspeed:number;\r\n    public overheadtime:number;\r\n    public repair:number;\r\n    public reducedamage:number;\r\n\r\n    public airlaunchtime:number;\r\n    public airspeed:number;\r\n    public airfuel:number;\r\n    public airsightrange:number;\r\n    public upgrade_xp:number[];\r\n    public upgrade_time:number[];\r\n    public upgrade_cost_fuel:number[];\r\n\r\n    public master_cost_fuel:number;\r\n    public master_cost_credit:number;\r\n    public master_cost_steel:number;\r\n\r\n    \r\n\r\n\r\n\r\n    public init(row:any){\r\n        \r\n        this.klass=row['CLASS'];\r\n        this.type=row['TEAM'];\r\n        this.health=row['HEALTH'];\r\n        this.aaw=row['AAW'];\r\n        this.turn=row['TURN'];\r\n        this.divetime=row['DIVE_TIME'];\r\n        this.accurancy=row['ACCURANCY'];\r\n        this.sightrange=row['SIGHT_RANGE'];\r\n        this.gunreload=row['GUN_RELOAD'];\r\n        this.torpedoreload=row['TORPEDO_RELOAD'];\r\n        this.maxspeed=row['SPEED'];\r\n        this.overheadspeed=row['OVERHEAT'];\r\n        this.overheadtime=row['OVERHEAT_TIME'];\r\n        this.repair=row['REPAIR'];\r\n        this.reducedamage=row['REDUCE_DAMAGE'];\r\n        this.airlaunchtime=row['AIR_LAUNCH_TIME'];\r\n        this.airspeed=row['AIR_SPEED'];\r\n        this.airfuel=row['AIR_FUEL'];\r\n        this.airsightrange=row['AIR_SIGHT_RANGE'];\r\n\r\n        this.upgrade_xp = [];\r\n        this.upgrade_time = [];\r\n        this.upgrade_cost_fuel = [];\r\n        for (let i=0;i<5;i++){\r\n            this.upgrade_xp[i]=0;\r\n            this.upgrade_time[i]=0;\r\n            this.upgrade_cost_fuel[i]=0;\r\n        }\r\n\r\n        for (let i=1;i<4;i++){\r\n            this.upgrade_xp[i]=row[`XP${i}`];\r\n            this.upgrade_time[i]=row[`TIME${i}`];\r\n            this.upgrade_cost_fuel[i]=row[`TrainCost${i}`];\r\n        }\r\n\r\n        this.master_cost_credit = row['MasterCost'];\r\n        this.master_cost_fuel = row['MasterCostFuel'];\r\n        this.master_cost_steel = row['MasterCostSteel'];\r\n\r\n    }\r\n\r\n    public export(level:number){\r\n        let type_s = type_map.find(t=>t.v==this.type).s;\r\n        let type_str = Translation.str(type_s, type_s); \r\n\r\n        let upgrade_xp = '';\r\n        let upgrade_time = '';\r\n        let upgrade_cost_fuel = '';\r\n\r\n        let master_credit = '';\r\n        let master_steel = '';\r\n        let master_fuel = '';\r\n\r\n        if (level == 0 || level == 4){\r\n            if (level == 4){\r\n                master_credit = this.master_cost_credit.toString();\r\n                master_steel = this.master_cost_steel.toString();\r\n                master_fuel = this.master_cost_fuel.toString();\r\n            }\r\n        }else{\r\n            upgrade_xp = this.upgrade_xp[level].toString();\r\n            upgrade_time = this.upgrade_time[level].toString();\r\n            upgrade_cost_fuel = this.upgrade_cost_fuel[level].toString();\r\n        }\r\n\r\n\r\n        let abrate = abiliti_rate[level];\r\n        let obj_attr = [\r\n            type_str,\r\n            Math.floor(this.health * abrate),\r\n            Math.floor(this.aaw * abrate),\r\n            Math.floor(this.turn * abrate),\r\n            Math.floor(this.divetime * abrate),\r\n            Math.floor(this.accurancy * abrate),\r\n            Math.floor(this.sightrange * abrate),\r\n            Math.floor(this.gunreload * abrate),\r\n            Math.floor(this.torpedoreload * abrate),\r\n            Math.floor(this.maxspeed * abrate),\r\n            Math.floor(this.overheadspeed * abrate),\r\n            Math.floor(this.overheadtime * abrate),\r\n            Math.floor(this.repair * abrate),\r\n            Math.floor(this.reducedamage * abrate),\r\n            Math.floor(this.airlaunchtime * abrate),\r\n            Math.floor(this.airspeed * abrate),\r\n            Math.floor(this.airfuel * abrate),\r\n            Math.floor(this.airsightrange * abrate),\r\n            upgrade_xp,\r\n            upgrade_time,\r\n            upgrade_cost_fuel,\r\n            this.master_cost_credit,\r\n            this.master_cost_fuel,\r\n            this.master_cost_steel,\r\n        ];\r\n\r\n\r\n\r\n        return obj_attr;\r\n    }\r\n}","import { DbHelper } from \"./dbhelper\";\r\nimport { NATION, SHIPCLASS, SHIPGRADE, COSTTYPE, EQUIPMENT_TYPE, AIRCRAFT_TYPE, MAX_EQUIPMENT_LEVEL, CREW_TYPE } from \"./Const\";\r\nimport { FCS } from \"./FCS\";\r\nimport { AirCraft, Plain } from \"./Aircraft\";\r\nimport { Gun } from \"./Gun\";\r\nimport { Launcher } from \"./Launcher\";\r\nimport { FlightDeck } from \"./Flightdeck\";\r\nimport { Engine } from \"./Engine\";\r\nimport { EquipmentClass, Equitment } from \"./Equipment\";\r\nimport { Armor } from \"./Armor\";\r\nimport { Oxygen } from \"./Oxygen\";\r\nimport { MountPoint } from \"./Mount\";\r\nimport { Crew } from \"./Crew\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class Ship{\r\n    \r\n    private id:number;\r\n    private nation:NATION;\r\n    private shipclass:SHIPCLASS;\r\n    private shipgrade:SHIPGRADE;\r\n    private shipname:string;\r\n    private size_l:number;\r\n    private size_w:number;\r\n    private size_h:number;\r\n    private turncap:number;\r\n    private cost:number;\r\n    private costType:COSTTYPE;\r\n    private buildtime:number;\r\n    private fuel:number;\r\n    private mountnum:number;\r\n    private dp:number;\r\n    private xpbonus:number;\r\n\r\n\r\n    // calc\r\n    private aadef:number;\r\n    private aarange:number;\r\n    \r\n    private GunTurretNum:number;\r\n    private GunBarrelNum:number;\r\n    private GunDamage:number;\r\n    private GunRange:number;\r\n    private GunReloadTime:number;\r\n    private DPS:number;\r\n    private LauncherNum:number;\r\n\r\n    // dynlink\r\n    public equipments:EquipmentClass[];\r\n    public mounts:MountPoint[];\r\n    public crews:Map<CREW_TYPE, Crew>;\r\n\r\n \r\n\r\n    public get DebugName(){\r\n        return `(${this.id})${this.shipname}`;\r\n    }\r\n\r\n    public init(shiprow:any){\r\n        this.id = shiprow['Serial_SNDB'];\r\n        this.shipname = shiprow['FrameName'];\r\n        this.shipclass = shiprow['Class'];\r\n        this.shipgrade = shiprow['Grade'];\r\n        this.nation = shiprow['Nation']\r\n        this.dp = shiprow['DP_Default'];\r\n        this.turncap = shiprow['Turn_Differ'];\r\n        this.size_l = shiprow['Length'];\r\n        this.size_w = shiprow['Breadth'];\r\n        this.size_h = shiprow['Depth'];\r\n        this.cost = shiprow['ValueDefault'];\r\n        this.costType = shiprow['Type'];\r\n        this.buildtime = shiprow['BuildTime'];\r\n        this.xpbonus = shiprow['XPBonus'];\r\n        this.fuel = shiprow['Fuel'];\r\n        this.aadef = shiprow['AA_Def'];\r\n        this.aarange = shiprow['AAWRange'];\r\n        this.mountnum = shiprow['No_of_Mount'];\r\n        \r\n\r\n        // init equipments classes\r\n        this.equipments = [];\r\n        for (let eq_type in EQUIPMENT_TYPE){\r\n            let eq_class = new EquipmentClass();\r\n            eq_class.type = Number(eq_type);\r\n            this.equipments.push(eq_class);\r\n        }\r\n\r\n        // init mount\r\n        this.mounts = [];\r\n        for (let i=1;i<this.mountnum+1;i++){\r\n            let mount = new MountPoint(i);\r\n            mount.defautEquipmentId = shiprow[`CodeWeapon${i}`];\r\n            mount.driveflag = shiprow[`DriveFlag${i}`];\r\n            mount.controlflag = shiprow[`ControlFlag${i}`];\r\n            mount.mountflag = shiprow[`MountFlag${i}`];\r\n            this.mounts.push(mount);\r\n        }\r\n        //init default equitments\r\n        let wp_count_dic:{id:number,num:number}[] = [];\r\n        // load default guns\r\n        for (let mount of this.mounts){\r\n            /*\r\n            driveflag\r\n            战舰：:主炮=0，副炮/发射器=1，\r\n            潜艇：鱼雷=1，副炮=0\r\n            航母：副炮=0\r\n            \r\n            controlflag\r\n            战舰：:\r\n            潜艇：\r\n            航母：0=前？1=后？\r\n            SO：0=gun，1=laucher\r\n\r\n            mountflag\r\n            0=中间\r\n            1=左边\r\n            2=右边\r\n\r\n            */\r\n            let dup_idx = wp_count_dic.findIndex((w)=>{\r\n                return w.id == mount.defautEquipmentId;\r\n            });\r\n            if (dup_idx != -1){\r\n                wp_count_dic[dup_idx].num ++;\r\n                continue;\r\n            }\r\n            wp_count_dic.push({id:mount.defautEquipmentId, num:0});\r\n\r\n            if (this.shipclass == SHIPCLASS.DD ||\r\n                this.shipclass == SHIPCLASS.CL ||\r\n                this.shipclass == SHIPCLASS.CA ||\r\n                this.shipclass == SHIPCLASS.BB){\r\n                if (mount.driveflag == 0){// 主炮\r\n                    let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.GUN);\r\n                    let rs = DbHelper.query('GUN', {Serial_SNDB:mount.defautEquipmentId});\r\n                    let gun = new Gun();\r\n                    gun.klass = eq_class;\r\n                    gun.init(rs[0]);\r\n                    eq_class.levels.push(gun);\r\n                    //eq_class.count++;\r\n                    \r\n                }else{//副武器\r\n                    let eq_type = EquipmentClass.getEquipmentTypeById(mount.defautEquipmentId);\r\n                    let eq_class = this.equipments.find(e=>e.type==eq_type);\r\n                    if (eq_type == EQUIPMENT_TYPE.AUTO_GUN){\r\n                        let rs = DbHelper.query('GUN', {Serial_SNDB:mount.defautEquipmentId});\r\n                        let gun = new Gun();\r\n                        gun.klass = eq_class;\r\n                        gun.init(rs[0]);\r\n                        eq_class.levels.push(gun);\r\n                        //eq_class.count++;\r\n                    }else if (eq_type == EQUIPMENT_TYPE.LAUNCHER){\r\n                        let rs = DbHelper.query('LAUNCHER', {Serial_SNDB:mount.defautEquipmentId});\r\n                        let launcher = new Launcher();\r\n                        launcher.klass = eq_class;\r\n                        launcher.init(rs[0]);\r\n                        eq_class.levels.push(launcher);\r\n                        //eq_class.count++;\r\n                    }\r\n                }\r\n            }else if (this.shipclass == SHIPCLASS.CV || this.shipclass == SHIPCLASS.SS){\r\n                let eq_type = EquipmentClass.getEquipmentTypeById(mount.defautEquipmentId);\r\n                let eq_class = this.equipments.find(e=>e.type==eq_type);\r\n                if (eq_type == EQUIPMENT_TYPE.AUTO_GUN){\r\n                    let rs = DbHelper.query('GUN', {Serial_SNDB:mount.defautEquipmentId});\r\n                    let gun = new Gun();\r\n                    gun.klass = eq_class;\r\n                    gun.init(rs[0]);\r\n                    eq_class.levels.push(gun);\r\n                }else if (eq_type == EQUIPMENT_TYPE.LAUNCHER){\r\n                    let rs = DbHelper.query('LAUNCHER', {Serial_SNDB:mount.defautEquipmentId});\r\n                    let launcher = new Launcher();\r\n                    launcher.klass = eq_class;\r\n                    launcher.init(rs[0]);\r\n                    eq_class.levels.push(launcher);\r\n                }\r\n            }\r\n        }\r\n        let eq_class_gun = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.GUN);\r\n        let eq_class_autogun = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.AUTO_GUN);\r\n        let eq_class_launcher = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.LAUNCHER);\r\n        for (let mount of this.mounts){\r\n            //console.log(\"mount id\" + mount.defautEquipmentId);\r\n            if (eq_class_gun && eq_class_gun.levels[0]){\r\n                if (mount.defautEquipmentId == eq_class_gun.levels[0].id){\r\n                    eq_class_gun.count++;\r\n                }\r\n            }\r\n            if (eq_class_autogun && eq_class_autogun.levels[0]){\r\n                if (mount.defautEquipmentId == eq_class_autogun.levels[0].id){\r\n                    eq_class_autogun.count++;\r\n                }\r\n            }\r\n            if (eq_class_launcher && eq_class_launcher.levels[0]){\r\n                if (mount.defautEquipmentId == eq_class_launcher.levels[0].id){\r\n                    eq_class_launcher.count++;\r\n                }\r\n            }\r\n        }\r\n \r\n\r\n        {\r\n            // insert def fcs\r\n            let fcs_id_def = shiprow['FCS'];\r\n            let eq_class_fcs = this.equipments.find((e)=>e.type == EQUIPMENT_TYPE.FCS);\r\n            let rs = DbHelper.query('FCS', {Serial_SNDB:fcs_id_def});\r\n            let eq = new FCS();\r\n            eq.klass = eq_class_fcs;\r\n            eq.init(rs[0]);\r\n            eq_class_fcs.levels.push(eq);\r\n        }\r\n\r\n        {\r\n            // insert def engine\r\n            let engine_id_def = shiprow['Engine'];\r\n            let eq_class_engine = this.equipments.find((e)=>e.type == EQUIPMENT_TYPE.ENGINE);\r\n            let rs = DbHelper.query('ENGINE', {Serial_SNDB:engine_id_def});\r\n            let eq = new Engine();\r\n            eq.klass = eq_class_engine;\r\n            eq.init(rs[0]);\r\n            eq_class_engine.levels.push(eq);\r\n        }\r\n\r\n        {\r\n            // insert def flightdeck\r\n            let flightdeck_id_def = shiprow['FlightDeck'];\r\n            if (flightdeck_id_def != 0){\r\n                let eq_class_flightdeck = this.equipments.find((e)=>e.type == EQUIPMENT_TYPE.FLIGHTDECK);\r\n                let rs = DbHelper.query('FLIGHTDECK', {Serial_SNDB:flightdeck_id_def});\r\n                let eq = new FlightDeck();\r\n                eq.klass =eq_class_flightdeck;\r\n                eq.init(rs[0]);\r\n                eq_class_flightdeck.levels.push(eq);\r\n            }\r\n        }\r\n        {\r\n            // insert def oxygen\r\n            let oxygen_id_def = shiprow['Oxygen'];\r\n            if (oxygen_id_def != 0){\r\n                let eq_class_oxygen = this.equipments.find((e)=>e.type == EQUIPMENT_TYPE.OXYGEN);\r\n                let rs = DbHelper.query('OXYGEN', {Serial_SNDB:oxygen_id_def});\r\n                let eq = new Oxygen()\r\n                eq.klass = eq_class_oxygen;\r\n                eq.init(rs[0]);\r\n                eq_class_oxygen.levels.push(eq);\r\n            }\r\n        }\r\n        {\r\n            // insert def armor\r\n            let eq_class_armor = this.equipments.find((e)=>e.type == EQUIPMENT_TYPE.ARMOR);\r\n            let eq = new Armor();\r\n            eq.klass = eq_class_armor;\r\n            eq_class_armor.levels.push(eq);\r\n        }\r\n        {\r\n            // insert def aircraft\r\n            let air_types = [\"AircraftScoutSNDB\",\"AircraftFighterSNDB\",\"AircraftTorpedoSNDB\",\"AircraftBomberSNDB\"];\r\n\r\n            for (let air_type of air_types){\r\n                let air_id = shiprow[air_type];\r\n    \r\n                if (air_id != 0){\r\n                    let eq_class_aircraft = this.equipments.find((e)=>e.type == EQUIPMENT_TYPE.AIRCRAFT);\r\n                    let rs = DbHelper.query('AIRCRAFT', {Serial_SNDB:air_id});\r\n                    let air_type = rs[0]['AirCraftType'];\r\n                    if (eq_class_aircraft.levels.length == 0){\r\n                        let eq = new AirCraft();\r\n                        eq_class_aircraft.levels.push(eq);\r\n                        eq.klass = eq_class_aircraft;\r\n                    }\r\n                    let ac = eq_class_aircraft.levels[0] as AirCraft;\r\n                    let plain = new Plain();\r\n                    ac.plainMap.set(air_type, plain);\r\n                    plain.init(rs[0]);\r\n                }\r\n    \r\n                \r\n            }\r\n\r\n        }\r\n\r\n        // insert upgrade equipments\r\n        let equipment_rs = DbHelper.query(\"EQUIPMENT\", {Serial_SNDB:this.id});\r\n        if (equipment_rs && equipment_rs.length > 0){\r\n            let equipment_row = equipment_rs[0];\r\n            let db_keys = ['A','B','C','D','E','F'];\r\n            // 遍历最多6种可能升级的装备\r\n            for (let db_key of db_keys){\r\n                let eq_types = equipment_row[`${db_key}_TYPE`];\r\n                \r\n\r\n                if (eq_types != 0 && eq_types != '0'){\r\n                    \r\n                    let eq_typev = EquipmentClass.getEquipmentTypeByStr(eq_types);\r\n                    // 遍历3等级\r\n                    for (let level=1;level<MAX_EQUIPMENT_LEVEL+1;level++){\r\n                        let subkey = `${db_key}${level}`;\r\n                        let eq_id = equipment_row[`${subkey}_SNDB`];\r\n                        \r\n                        let eq_class = this.equipments.find(e=>e.type==eq_typev);\r\n                        if (eq_class.type == EQUIPMENT_TYPE.GUN || eq_class.type == EQUIPMENT_TYPE.AUTO_GUN){\r\n                            let obj = new Gun();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('GUN', {Serial_SNDB:eq_id});\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            obj.init(rs[0]);\r\n                            eq_class.levels.push(obj);\r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.LAUNCHER){\r\n                            // hack\r\n                            let eq_real_type = EquipmentClass.getEquipmentTypeById(eq_id);\r\n                            if (eq_real_type == EQUIPMENT_TYPE.LAUNCHER){\r\n                                let obj = new Launcher();\r\n                                obj.klass = eq_class;\r\n                                let rs = DbHelper.query('LAUNCHER', {Serial_SNDB:eq_id});\r\n                                obj.loadEquipmentInfo(equipment_row, subkey);\r\n                                obj.init(rs[0]);\r\n                                eq_class.levels.push(obj);\r\n                            }else if (eq_real_type == EQUIPMENT_TYPE.AUTO_GUN){\r\n                                let obj = new Gun();\r\n                                obj.klass = eq_class;\r\n                                let rs = DbHelper.query('GUN', {Serial_SNDB:eq_id});\r\n                                obj.loadEquipmentInfo(equipment_row, subkey);\r\n                                obj.init(rs[0]);\r\n                                eq_class.levels.push(obj);\r\n                            }\r\n                            \r\n        \r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.AIRCRAFT){\r\n                            let obj = new AirCraft();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('AIRCRAFT', {Serial_SNDB:eq_id});\r\n                            eq_class.levels.push(obj);\r\n\r\n                            let air_type = rs[0]['AirCraftType'];\r\n                            let plain = new Plain();\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            plain.init(rs[0]);\r\n                            obj.plainMap.set(air_type, plain);\r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.ARMOR || eq_class.type == EQUIPMENT_TYPE.HULL){\r\n                            let obj = new Armor();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('SHIELD', {Serial_SNDB:eq_id});\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            obj.init(rs[0]);\r\n                            eq_class.levels.push(obj);\r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.ENGINE){\r\n                            let obj = new Engine();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('ENGINE', {Serial_SNDB:eq_id});\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            obj.init(rs[0]);\r\n                            eq_class.levels.push(obj);\r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.FCS){\r\n                            let obj = new FCS();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('FCS', {Serial_SNDB:eq_id});\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            obj.init(rs[0]);\r\n                            eq_class.levels.push(obj);\r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.FLIGHTDECK){\r\n                            let obj = new FlightDeck();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('FLIGHTDECK', {Serial_SNDB:eq_id});\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            obj.init(rs[0]);\r\n                            eq_class.levels.push(obj);\r\n                        }else if (eq_class.type == EQUIPMENT_TYPE.OXYGEN){\r\n                            let obj = new Oxygen();\r\n                            obj.klass = eq_class;\r\n                            let rs = DbHelper.query('OXYGEN', {Serial_SNDB:eq_id});\r\n                            obj.loadEquipmentInfo(equipment_row, subkey);\r\n                            obj.init(rs[0]);\r\n                            eq_class.levels.push(obj);\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // init crew\r\n        this.crews = new Map<CREW_TYPE, Crew>();\r\n        let quert_class = this.shipclass;\r\n        let rs = DbHelper.query('CREW', {CLASS:quert_class});\r\n        for (let crewrow of rs){\r\n            let crew = new Crew();\r\n            crew.init(crewrow);\r\n            this.crews.set(crew.type, crew);\r\n        }\r\n    }\r\n\r\n    public exportBaseData(){\r\n        // 经验奖励\r\n        // 最大航速\r\n        // 过热航速\r\n        // 过热时间\r\n        // 对空防御\r\n        // 防御范围\r\n        // 侦察机\r\n        // 视野范围\r\n        // 雷达范围\r\n        // 暴击率\r\n        // 主炮数量\r\n        // 主炮炮管\r\n        // 主炮射程\r\n        // 主炮威力\r\n        // 主炮装填\r\n        // DPS\r\n        let scouts = 0;\r\n        let eq_flightdeck = this.equipments.find(e=>e.type == EQUIPMENT_TYPE.FLIGHTDECK);\r\n        if (eq_flightdeck && eq_flightdeck.levels[0]){\r\n            let fd = eq_flightdeck.levels[0] as FlightDeck;\r\n            scouts = fd.scout;\r\n        }\r\n\r\n        let eq_engine = this.equipments.find(e=>e.type == EQUIPMENT_TYPE.ENGINE);\r\n        let def_engine = (eq_engine.levels[0] as Engine);\r\n        \r\n        let eq_fcs = this.equipments.find(e=>e.type == EQUIPMENT_TYPE.FCS);\r\n        let def_fcs = (eq_fcs.levels[0] as FCS);\r\n\r\n        let cost_str = this.cost.toString() + (this.costType==0?' Steel':' Gold');\r\n\r\n        this.DPS = 0;\r\n        this.GunTurretNum = 0;\r\n        this.GunBarrelNum = 0;\r\n        this.GunDamage = 0;\r\n        this.GunReloadTime = 0;\r\n        let eq_gun = this.equipments.find(e=>e.type == EQUIPMENT_TYPE.GUN);\r\n        if (eq_gun && eq_gun.levels[0]){\r\n            let gun = eq_gun.levels[0] as Gun;\r\n            this.GunTurretNum = eq_gun.count;\r\n            this.GunBarrelNum = gun.barrelnum;\r\n            this.GunDamage = gun.hedamage;\r\n            this.GunRange = gun.range;\r\n            this.GunReloadTime = gun.reloadtime;\r\n            this.DPS = gun.hedamage * this.GunTurretNum *this.GunBarrelNum* 100/gun.reloadtime;\r\n        }\r\n\r\n        this.LauncherNum = 0;\r\n        let eq_launcher = this.equipments.find(e=>e.type == EQUIPMENT_TYPE.LAUNCHER);\r\n        if (eq_launcher && eq_launcher.levels[0]){\r\n            this.LauncherNum = eq_launcher.count;\r\n        }\r\n\r\n\r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"XP Bonus\"},\r\n                {text:\"DP\"},\r\n                {text:\"Max Speed\"},\r\n                {text:\"Overheat Speed\"},\r\n                {text:\"Overheat Time\"},\r\n                {text:\"AA Damage\"},\r\n                {text:\"AA Range\"},\r\n                {text:\"scouts\"},\r\n                {text:\"Sight Range\"},\r\n                {text:\"Radar Range\"},\r\n                {text:\"Sonar Range\"},\r\n                {text:\"Critical\"},\r\n                {text:\"Main Gun Turrets\"},\r\n                {text:\"Main Gun Barrels\"},\r\n                {text:\"Main Gun Range\"},\r\n                {text:\"Main Gun Damage\"},\r\n                {text:\"Main Gun Reload\"},\r\n                {text:\"DPS\"},\r\n                {text:\"Launchers\"},\r\n                {text:\"Build Time\"},\r\n                {text:\"Cost\"},\r\n            ],\r\n            data:[\r\n                this.xpbonus,\r\n                this.dp,\r\n                `${def_engine.maxspeed} kn`,\r\n                `${def_engine.overspeed} kn`,\r\n                `${def_engine.overtime} Sec`,\r\n                this.aadef,\r\n                this.aarange,\r\n                scouts,\r\n                def_fcs.sightdist,\r\n                def_fcs.radarrange,\r\n                def_fcs.sonarrange,\r\n                `${def_fcs.criticalrate} %`,\r\n                this.GunTurretNum,\r\n                this.GunBarrelNum,\r\n                this.GunRange,\r\n                this.GunDamage,\r\n                `${(this.GunReloadTime/100).toFixed(2)} Sec`,\r\n                this.DPS.toFixed(0),\r\n                this.LauncherNum,\r\n                `${this.buildtime} Sec`,\r\n                cost_str,\r\n            ],\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    public exportExtraData(){\r\n        // 尺寸\r\n        // 转向\r\n        // 武器数量\r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Size\"},\r\n                {text:\"Turn Cap\"},\r\n                {text:\"Weapons\"},\r\n\r\n            ],\r\n            data:[\r\n                `L:${this.size_l} x W:${this.size_w} x H:${this.size_h}`,\r\n                this.turncap,\r\n                this.mountnum\r\n            ],\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    public exportGunsData(type:EQUIPMENT_TYPE){\r\n        let levels = [];\r\n\r\n        let eq_class_gun = this.equipments.find((e)=>e.type == type);\r\n        let weapon_list = eq_class_gun.levels;\r\n        \r\n        for (let weapon of weapon_list){\r\n            let items = [];\r\n\r\n            items.push(weapon.export());\r\n            levels.push({items:items});\r\n        }\r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Name\",width:192},\r\n                {text:\"Amount\",width:32},\r\n                {text:\"Barrel\",width:48},\r\n                {text:\"Calibre\",width:64},\r\n                {text:\"Damage\",width:64},\r\n                {text:\"Range\",width:64},\r\n                {text:\"Reload\",width:64},\r\n                {text:\"TurnSpeed\",width:96},\r\n                {text:\"AA Damage\",width:96},\r\n                {text:\"AAW\",width:48},\r\n                {text:'Build Time', width:48},\r\n                {text:'Cost', width:64},\r\n\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    public exportLaunchersData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.LAUNCHER);\r\n        for (let weapon of eq_class.levels){\r\n            let items = [];\r\n            if (weapon instanceof Gun){\r\n                items.push(weapon.exportAsLauncher());\r\n            }else if (weapon instanceof Launcher){\r\n                items.push(weapon.export());\r\n            }   \r\n            levels.push({items:items});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Name\",width:192},\r\n                {text:\"Amount\",width:32},\r\n                {text:\"Bundle\",width:48},\r\n                {text:\"Damage\",width:64},\r\n                {text:\"Range\",width:64},\r\n                {text:\"Reload\",width:96},\r\n                {text:\"Speed\",width:96},\r\n                {text:'Build Time', width:48},\r\n                {text:'Cost', width:64},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    public exportEnginesData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.ENGINE);\r\n        for (let engine of eq_class.levels){\r\n            levels.push({items:[engine.export()]});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Name\",width:192},\r\n                {text:\"MaxSpeed\",width:96},\r\n                {text:\"OverheatSpeed\",width:96},\r\n                {text:\"OverheatTime\",width:96},\r\n                {text:'Build Time', width:48},\r\n                {text:'Cost', width:64},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n    public exportFCSsData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.FCS);\r\n        for (let fcs of eq_class.levels){\r\n            let items = [];\r\n            items.push(fcs.export());\r\n            levels.push({items:items});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Name\",width:100},\r\n                {text:\"Accuracy\",width:96},\r\n                {text:\"SightRange\",width:96},\r\n                {text:\"RadarRange\",width:96},\r\n                {text:\"SonarRange\",width:96},\r\n                {text:\"TorpedoRange\",width:96},\r\n                {text:\"Critical\",width:96},\r\n                {text:'Build Time', width:64},\r\n                {text:'Cost', width:96},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n    public exportFlightDecksData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.FLIGHTDECK);\r\n        for (let fd of eq_class.levels){\r\n            let items = [];\r\n            items.push(fd.export());\r\n            levels.push({items:items});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Scout\",width:96},\r\n                {text:\"Fighter\",width:96},\r\n                {text:\"Torpedo\",width:96},\r\n                {text:\"Bomber\",width:96},\r\n                {text:\"Squadron\",width:96},\r\n                {text:'Build Time', width:64},\r\n                {text:'Cost', width:94},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n    public exportAircraftData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.AIRCRAFT);\r\n        for (let eq of eq_class.levels){\r\n            let ac = eq as AirCraft;\r\n            let items = ac.exportAircraftPlains();\r\n            levels.push({items:items});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Name\",width:192},\r\n                {text:\"Type\",width:48},\r\n                {text:\"SightRange\",width:48},\r\n                {text:\"DP\",width:64},\r\n                {text:\"Speed\",width:64},\r\n                {text:\"Fuel\",width:64},\r\n                {text:\"Attack\",width:64},\r\n                {text:\"AttackInterval\",width:64},\r\n                {text:\"DefenceAP\",width:64},\r\n                {text:\"ReadyTime\",width:64},\r\n                {text:\"TorpedoSpeed\",width:64},\r\n                {text:\"TorpedoDamage\",width:64},\r\n                {text:\"BombDamage\",width:64},\r\n                {text:\"APDamageBonus\",width:64},\r\n                {text:'Build Time', width:64},\r\n                {text:'Cost', width:94},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    public exportArmorData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.ARMOR);\r\n        for (let ar of eq_class.levels){\r\n            let items = [];\r\n            items.push(ar.export());\r\n            levels.push({items:items});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:`                    <tr>\r\n                        <th rowspan=\"2\" style=\"width: 64px;\">Level</th>\r\n                        <th rowspan=\"2\" style=\"width: 64px;\">Name</th>\r\n                        <th rowspan=\"2\" style=\"width: 64px;\">Bulge</th>\r\n                        <th rowspan=\"2\" style=\"width: 64px;\">Hull</th>\r\n                        <th rowspan=\"2\" style=\"width: 64px;\">Speed</th>\r\n                        <th colspan=\"16\">Belt Damage Reduction</th>\r\n                        <th colspan=\"16\">Deck Damage Reduction</th>\r\n                        <th rowspan=\"2\" style=\"width: 64px;\">Built Time</th>\r\n                        <th rowspan=\"2\" style=\"width: 94px;\">Cost</th>\r\n                    </tr>\r\n                    <tr class=\"damagereducion_tr\">\r\n                        <th>5\"</th><th>6\"</th><th>7\"</th><th>8\"</th><th>9\"</th><th>10\"</th><th>11\"</th><th>12\"</th><th>13\"</th><th>14\"</th><th>15\"</th><th>16\"</th><th>17\"</th><th>18\"</th><th>19\"</th><th>20\"</th>\r\n                        <th>5\"</th><th>6\"</th><th>7\"</th><th>8\"</th><th>9\"</th><th>10\"</th><th>11\"</th><th>12\"</th><th>13\"</th><th>14\"</th><th>15\"</th><th>16\"</th><th>17\"</th><th>18\"</th><th>19\"</th><th>20\"</th>\r\n                    </tr>`,\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n    public exportOxygensData(){\r\n        let levels = [];\r\n        let eq_class = this.equipments.find(e=>e.type==EQUIPMENT_TYPE.OXYGEN);\r\n        for (let ox of eq_class.levels){\r\n            let items = [];\r\n            items.push(ox.export());\r\n            levels.push({items:items});\r\n        }\r\n        \r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:64},\r\n                {text:\"Dive Time\",width:96},\r\n                {text:'Build Time', width:64},\r\n                {text:'Cost', width:94},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    public exportCrewsData(){\r\n        let levels = [];\r\n\r\n        for (let i=0;i<5;i++){\r\n            let items = [];\r\n            for (let crew of this.crews.values()){\r\n                items.push(crew.export(i));\r\n            }\r\n            levels.push({items:items});\r\n        }\r\n\r\n\r\n        let obj = {\r\n            titles:[\r\n                {text:\"Level\",width:48},\r\n                {text:\"Team\",width:48},\r\n                {text:\"Health\",width:48},\r\n                {text:'AAW', width:48},\r\n                {text:'Turn', width:48},\r\n                {text:'DiveTime', width:48},\r\n                {text:'Accurancy', width:48},\r\n                {text:'Sight Range', width:48},\r\n                {text:'Gun Reload Time', width:48},\r\n                {text:'Torpedo Reload TIme', width:48},\r\n                {text:'Max Speed', width:48},\r\n                {text:'Overhead Speed', width:48},\r\n                {text:'Overhead Time', width:48},\r\n                {text:'Repair', width:48},\r\n                {text:'Reduce Damage', width:48},\r\n                {text:'Air Launch TIme', width:48},\r\n                {text:'Air Speed', width:48},\r\n                {text:'Air Fuel', width:48},\r\n                {text:'Air Sight Range', width:48},\r\n                {text:'Upgrade XP', width:48},\r\n                {text:'Upgrade Time', width:48},\r\n                {text:'Upgrade Fuel Cost', width:64},\r\n                {text:'Master Credit Cost', width:48},\r\n                {text:'Master Fuel Cost', width:96},\r\n                {text:'Master Steel Cost', width:96},\r\n            ],\r\n            levels:levels,\r\n        }\r\n\r\n        return obj;\r\n    }\r\n}","import { Ship } from \"./ship\";\r\nimport { DbHelper } from \"./dbhelper\";\r\nimport { NATION, SHIPCLASS, SHIPGRADE, EQUIPMENT_TYPE } from \"./Const\";\r\nimport { Translation } from \"./Translation\";\r\n\r\n(<any>window).AsyncStart = function(){\r\n    Main.Start();\r\n}\r\n\r\n\r\n\r\nexport class Main{\r\n    private static m_jq_cb_dbver:any;\r\n    private static m_jq_cb_nation:any;\r\n    private static m_jq_cb_shipclass:any;\r\n    private static m_jq_cb_shipgrade:any;\r\n    private static m_jq_cb_shipname:any;\r\n    // ship\r\n    private static m_jq_img_shipimage:any;\r\n    private static m_jq_base_div:any;\r\n    // tabs\r\n    private static m_jq_tab_base_table:any;\r\n    private static m_jq_tab_extra_table:any;\r\n    private static m_jq_tab_gun_table:any;\r\n    private static m_jq_tab_autogun_table:any;\r\n    private static m_jq_tab_launcher_table:any;\r\n    private static m_jq_tab_aircraft_table:any;\r\n    private static m_jq_tab_fcs_table:any;\r\n    private static m_jq_tab_engine_table:any;\r\n    private static m_jq_tab_flightdeck_table:any;\r\n    private static m_jq_tab_armor_table:any;\r\n    private static m_jq_tab_oxygen_table:any;\r\n    private static m_jq_tab_crew_table:any;\r\n    private static m_jq_win_loading:any;\r\n\r\n    //local \r\n    private static m_inited:any;\r\n\r\n    private static m_nation:NATION;\r\n    private static m_shipclass:SHIPCLASS;\r\n    private static m_shipgrade:SHIPGRADE;\r\n    private static m_last_shiplist:any;\r\n    private static m_selected_ship:any;\r\n\r\n    public static async Start(){\r\n        this.init();\r\n        await DbHelper.init();\r\n        this.m_jq_win_loading.window('open');\r\n        await Translation.init('en');\r\n        console.log(\"nfm start\");\r\n        this.m_inited = true;\r\n        this.m_jq_win_loading.window('close');\r\n\r\n        //this.exportKeyWords();\r\n    }\r\n\r\n    private static init(){\r\n        \r\n        let that = this;\r\n        this.m_inited = false;\r\n\r\n        this.m_jq_cb_dbver = $('#dbversion');\r\n        this.m_jq_cb_dbver.combobox({\r\n            editable:false,\r\n        });\r\n        this.m_jq_cb_nation = $('#nation');\r\n        this.m_jq_cb_nation.combobox({\r\n            valueField:\"value\",\r\n            textField:\"text\",\r\n            editable:false,\r\n            onSelect: function(rec:any){\r\n                //console.log(rec);\r\n                that.m_nation = rec.value;\r\n                that.refreshL1();\r\n            }\r\n        });\r\n        this.m_jq_cb_nation.combobox(\"setValue\",NATION.ALL);\r\n\r\n        this.m_jq_cb_shipclass = $('#shipclass');\r\n        this.m_jq_cb_shipclass.combobox({\r\n            valueField:\"value\",\r\n            textField:\"text\",\r\n            editable:false,\r\n            onSelect: function(rec:any){\r\n                that.m_shipclass = rec.value;\r\n                that.refreshL1();\r\n            }\r\n        });\r\n        this.m_jq_cb_shipclass.combobox(\"setValue\",SHIPCLASS.ALL);\r\n\r\n        this.m_jq_cb_shipgrade = $('#shipgrade');\r\n        this.m_jq_cb_shipgrade.combobox({\r\n            valueField:\"value\",\r\n            textField:\"text\",\r\n            editable:false,\r\n            onSelect: function(rec:any){\r\n                that.m_shipgrade = rec.value;\r\n                that.refreshL1();\r\n            }\r\n        });\r\n        this.m_jq_cb_shipgrade.combobox(\"setValue\",SHIPGRADE.ALL);\r\n\r\n        this.m_jq_cb_shipname = $('#shipname');\r\n        this.m_jq_cb_shipname.combobox({\r\n            valueField:\"value\",\r\n            textField:\"text\",\r\n            editable:false,\r\n            onSelect: function(rec:any){\r\n                let idx = that.m_last_shiplist.findIndex((s:any)=>{\r\n                    return s.Serial_SNDB == rec.value;\r\n                });\r\n                if (idx != -1){\r\n                    that.m_selected_ship = that.m_last_shiplist[idx];\r\n                }else{\r\n                    that.m_selected_ship = null;\r\n                }\r\n                that.refreshL2();\r\n                \r\n            }\r\n        }); \r\n\r\n        \r\n        this.m_jq_base_div = $('base_div');\r\n        this.m_jq_img_shipimage = $('#ship_img');\r\n        this.m_jq_tab_base_table = $('#tab_base_table');\r\n        this.m_jq_tab_extra_table = $('#tab_extra_table');\r\n        this.m_jq_tab_gun_table = $('#tab_gun_table');\r\n        this.m_jq_tab_autogun_table = $('#tab_autogun_table');\r\n        this.m_jq_tab_launcher_table = $('#tab_launcher_table');\r\n        this.m_jq_tab_aircraft_table = $('#tab_aircraft_table');\r\n        this.m_jq_tab_fcs_table = $('#tab_fcs_table');\r\n        this.m_jq_tab_engine_table = $('#tab_engine_table');\r\n        this.m_jq_tab_flightdeck_table = $('#tab_flightdeck_table');\r\n        this.m_jq_tab_armor_table = $('#tab_armor_table');\r\n        this.m_jq_tab_oxygen_table = $('#tab_oxygen_table');\r\n        this.m_jq_tab_crew_table = $('#tab_crew_table');\r\n        this.m_jq_win_loading = $('#loading');\r\n        \r\n    }\r\n\r\n\r\n    private static refreshL1(){\r\n        if (!this.m_inited){\r\n            return;\r\n        }\r\n        let param = Object();\r\n        if (this.m_nation != NATION.ALL){\r\n            param.Nation = this.m_nation;\r\n        }\r\n        if (this.m_shipclass != SHIPCLASS.ALL){\r\n            param.Class = this.m_shipclass;\r\n        }\r\n        if (this.m_shipgrade != SHIPGRADE.ALL){\r\n            param.Grade = this.m_shipgrade;\r\n        }\r\n\r\n        this.m_last_shiplist = DbHelper.query(\"SHIP\", param);\r\n        //console.log(this.m_last_shiplist);\r\n        let data = [];\r\n        for (let row_ship of this.m_last_shiplist){\r\n            let in_shop = row_ship['Shop'];\r\n            if (in_shop == 1 || in_shop == 2){\r\n                let full_name = this.getShipFullName(row_ship);\r\n                data.push({\r\n                    value:row_ship.Serial_SNDB,\r\n                    text:full_name,\r\n                })\r\n            }\r\n\r\n        }\r\n        this.m_jq_cb_shipname.combobox(\"loadData\", data);\r\n    }\r\n\r\n    private static getShipClassStr(c:SHIPCLASS){\r\n        if (c == SHIPCLASS.DD){\r\n            return 'DD';\r\n        }else if (c == SHIPCLASS.CL){\r\n            return 'CL';\r\n        }else if (c == SHIPCLASS.CA){\r\n            return 'CA';\r\n        }else if (c == SHIPCLASS.BB){\r\n            return 'BB';\r\n        }else if (c == SHIPCLASS.CV){\r\n            return 'CV';\r\n        }else if (c == SHIPCLASS.SS){\r\n            return 'SS';\r\n        }else{\r\n            return c.toString();\r\n        }\r\n    }\r\n    private static getShipGradeStr(c:SHIPGRADE){\r\n        if (c == SHIPGRADE.S){\r\n            return 'S';\r\n        }else if (c == SHIPGRADE.A){\r\n            return 'A';\r\n        }else if (c == SHIPGRADE.B){\r\n            return 'B';\r\n        }else if (c == SHIPGRADE.C){\r\n            return 'C';\r\n        }else if (c == SHIPGRADE.D){\r\n            return 'D';\r\n        }else if (c == SHIPGRADE.E){\r\n            return 'E';\r\n        }else if (c == SHIPGRADE.F){\r\n            return 'F';\r\n        }else{\r\n            return '?';\r\n        }\r\n    }\r\n    private static getShipFullName(row:any){\r\n        let ship_name = row.FrameName.substr(3);\r\n        ship_name = Translation.str(row.FrameName, ship_name);\r\n        let klass = this.getShipClassStr(row.Class);\r\n        let grade = this.getShipGradeStr(row.Grade);\r\n        return `[${klass}]${ship_name} - ${grade}`;\r\n    }\r\n\r\n    private static refreshL2(){\r\n        if (this.m_selected_ship == null){\r\n            this.m_jq_img_shipimage.src = \"\";\r\n        }else{\r\n            let asset_ships = DbHelper.query(\"ASSET_SHIP\", {Serial_SNDB:this.m_selected_ship.Serial_SNDB});\r\n            if (asset_ships != null && asset_ships.length > 0){\r\n                let asset_ship = asset_ships[0];\r\n\r\n                let ship_img_url = `./asset/data_ship/${asset_ship.UIFolder}/Image.png`;\r\n                this.m_jq_img_shipimage.attr('src',ship_img_url);\r\n                //this.m_jq_base_div.css('background-image',`url(${ship_img_url})`);\r\n                //base\r\n                let ship = new Ship();\r\n                ship.init(this.m_selected_ship);\r\n\r\n                this.makeTable(this.m_jq_tab_base_table, ship.exportBaseData());\r\n                this.makeTable(this.m_jq_tab_extra_table, ship.exportExtraData());\r\n                // gun\r\n                this.makeLevelTable(this.m_jq_tab_gun_table, ship.exportGunsData(EQUIPMENT_TYPE.GUN));\r\n                // autogun\r\n                this.makeLevelTable(this.m_jq_tab_autogun_table, ship.exportGunsData(EQUIPMENT_TYPE.AUTO_GUN));\r\n                // launcher\r\n                this.makeLevelTable(this.m_jq_tab_launcher_table, ship.exportLaunchersData());\r\n                // launcher\r\n                this.makeLevelTable(this.m_jq_tab_engine_table, ship.exportEnginesData());\r\n                // flightdeck\r\n                this.makeLevelTable(this.m_jq_tab_flightdeck_table, ship.exportFlightDecksData());\r\n                // aircraft\r\n                this.makeLevelTable(this.m_jq_tab_aircraft_table, ship.exportAircraftData());\r\n\r\n\r\n                // fcs\r\n                this.makeLevelTable(this.m_jq_tab_fcs_table, ship.exportFCSsData());\r\n                // armor\r\n                this.makeLevelTable(this.m_jq_tab_armor_table, ship.exportArmorData());\r\n                // oxygen\r\n                this.makeLevelTable(this.m_jq_tab_oxygen_table, ship.exportOxygensData());\r\n                // crew\r\n                this.makeLevelTable(this.m_jq_tab_crew_table, ship.exportCrewsData());\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // private static async GetAsync(path:string): Promise<any>{\r\n    //     let loadedData = null;\r\n    //     $.get(path, function(data) {\r\n    //         loadedData = data;\r\n    //     });\r\n    //     while(loadedData == null){\r\n    //         await this.wait();\r\n    //     }\r\n    //     return loadedData;\r\n    // }\r\n    private static wait(): Promise<void>{\r\n        return new Promise<void>((resolve, reject)=>{setTimeout(()=>resolve(), 10)});\r\n    }\r\n\r\n    private static makeTable(jq_table:any, param:any){\r\n        jq_table.children().remove();\r\n        let jq_str = '';\r\n        for (let i=0; i<param.titles.length; i++){\r\n            \r\n            jq_str+= `<tr><th>${param.titles[i].text}:</th><td>${param.data[i]}</td></tr>`;\r\n        }\r\n        jq_table.append(jq_str);\r\n    }\r\n\r\n    private static makeLevelTable(jq_table:any, param_list:any){\r\n        jq_table.children().remove();\r\n        let jq_str = '';\r\n        if (param_list.titles != undefined){\r\n            if (param_list.titles instanceof Array){\r\n                // draw head\r\n                jq_str+='<tr>';\r\n                for (let title of param_list.titles){\r\n                    jq_str+=`<th width=\"${title.width}px\">${title.text}</th>`;\r\n                }\r\n                jq_str+='</tr>';\r\n            }else{\r\n                jq_str += param_list.titles;\r\n\r\n            }\r\n\r\n        }\r\n\r\n/*\r\n        {\r\n            titles:[{text:string, width:number}],\r\n            levels:[items:[{...}]}]\r\n        }\r\n\r\n*/\r\n        // draw content\r\n        for (let i=0;i<param_list.levels.length;i++){\r\n            let level = param_list.levels[i];\r\n            \r\n            for (let j=0;j<level.items.length;j++){\r\n                let item = level.items[j];\r\n                jq_str+='<tr>';\r\n                if (j==0){\r\n                    jq_str+=`<td rowspan=\"${level.items.length}\">Lv.${i}</td>`\r\n                }\r\n                for (let v of item){\r\n                    jq_str+= `<td>${v}</td>`;\r\n                }\r\n                jq_str+='</tr>';\r\n            }\r\n            \r\n        }\r\n\r\n        jq_table.append(jq_str);\r\n    }\r\n\r\n    private static async exportKeyWords(){\r\n        let keywords = [];\r\n        let ls_names = [];\r\n        let rs = DbHelper.query(\"SHIP\", undefined);\r\n        for (let row of rs){\r\n            ls_names.push(row['FrameName']);\r\n        }\r\n        await Translation.init('zh-Hans');\r\n        for (let ls of ls_names){\r\n            keywords.push(Translation.str(ls, ls));\r\n        }\r\n        await Translation.init('en');\r\n        for (let ls of ls_names){\r\n            keywords.push(Translation.str(ls, ls));\r\n        }\r\n        console.log(keywords.join(\",\"));\r\n\r\n    }\r\n}"],"sourceRoot":""}